# 隐含规则
CFLAGS=

foo:foo.c bar.c
	cc -o foo bar.c foo.c $(CFLAGS) $(LDFLAGS)

foo.o : foo.c
    cc –c foo.c $(CFLAGS)
bar.o : bar.c
    cc –c bar.c $(CFLAGS)

# 记忆的东西
# CC --- cc
# CXX --- g++
# CFLAGS --- c编译器参数
# CXXFLAGS --- c++编译器参数
# CPPFLAGS --- c预处理器参数
# LDFLAGS --- 连接器参数 ld   -- lmysql lprotoc
# RM -- rm -f *.o
#----------------------------------------------------
# 隐含规则链
# .y  -> .c -> .o -> .out
# 通常，一个被makefile指定成目标或是依赖目标的文件不能被当作中介。
# 然而，你可以明显地说明一个文件或是目标是中介目标，
# 你可以使用伪目标 .INTERMEDIATE 来强制声明
# ------------------------------------------------------------
# 定义模式规则
# 通配符号：%， *， .
# $< : 所有依赖目标中的第一个目标
# $@ : 所有目标文件
# $^ : 所有依赖目标集合
# $? : 所有比目标新的依赖目标的集合
# $* : ----------------------------------------------------

lib:foo.c bar.c lose.o win.o 
	ar r lib $?

# 重建内建隐含规则
%.o : %.c
	$(CC) -c $(CPPFLAGS) $(CFLAGS) -D$(date)

%.c : %.s
















